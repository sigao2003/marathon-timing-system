<?xml version="1.0" encoding="UTF-8"?>
<configuration scan="true" scanPeriod="30 seconds">

    <!-- 应用名称 -->
    <property name="APP_NAME" value="marathon-timing-system" />
    <!-- 日志存放路径 -->
    <property name="LOG_PATH" value="logs/${APP_NAME}" />
    <!-- 日志格式 -->
    <property name="LOG_PATTERN" value="%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n" />
    <!-- 控制台输出格式 -->
    <property name="CONSOLE_LOG_PATTERN" value="${LOG_PATTERN}" />
    <!-- 文件输出格式 -->
    <property name="FILE_LOG_PATTERN" value="${LOG_PATTERN}" />
    <!-- 最大历史日志保留天数 -->
    <property name="MAX_HISTORY" value="30" />
    <!-- 单个日志文件最大大小 -->
    <property name="MAX_FILE_SIZE" value="100MB" />
    <!-- 所有日志文件总大小限制 -->
    <property name="TOTAL_SIZE_CAP" value="3GB" />

    <!-- 环境变量，用于区分开发、测试和生产环境 -->
    <springProperty scope="context" name="ACTIVE_PROFILE" source="spring.profiles.active" defaultValue="dev" />

    <!-- 控制台输出 -->
    <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>DEBUG</level>
        </filter>
        <encoder>
            <pattern>${CONSOLE_LOG_PATTERN}</pattern>
            <charset>UTF-8</charset>
        </encoder>
    </appender>

    <!-- 所有日志文件 -->
    <appender name="FILE_ALL" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_PATH}/all.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>${LOG_PATH}/all.%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            <maxHistory>${MAX_HISTORY}</maxHistory>
            <maxFileSize>${MAX_FILE_SIZE}</maxFileSize>
            <totalSizeCap>${TOTAL_SIZE_CAP}</totalSizeCap>
        </rollingPolicy>
        <encoder>
            <pattern>${FILE_LOG_PATTERN}</pattern>
            <charset>UTF-8</charset>
        </encoder>
    </appender>

    <!-- 错误日志文件 -->
    <appender name="FILE_ERROR" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_PATH}/error.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>${LOG_PATH}/error.%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            <maxHistory>${MAX_HISTORY}</maxHistory>
            <maxFileSize>${MAX_FILE_SIZE}</maxFileSize>
            <totalSizeCap>${TOTAL_SIZE_CAP}</totalSizeCap>
        </rollingPolicy>
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>ERROR</level>
        </filter>
        <encoder>
            <pattern>${FILE_LOG_PATTERN}</pattern>
            <charset>UTF-8</charset>
        </encoder>
    </appender>

    <!-- MQTT相关日志 -->
    <appender name="FILE_MQTT" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_PATH}/mqtt.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>${LOG_PATH}/mqtt.%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            <maxHistory>${MAX_HISTORY}</maxHistory>
            <maxFileSize>${MAX_FILE_SIZE}</maxFileSize>
            <totalSizeCap>${TOTAL_SIZE_CAP}</totalSizeCap>
        </rollingPolicy>
        <encoder>
            <pattern>${FILE_LOG_PATTERN}</pattern>
            <charset>UTF-8</charset>
        </encoder>
    </appender>

    <!-- 数据库相关日志 -->
    <appender name="FILE_DB" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_PATH}/db.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>${LOG_PATH}/db.%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            <maxHistory>${MAX_HISTORY}</maxHistory>
            <maxFileSize>${MAX_FILE_SIZE}</maxFileSize>
            <totalSizeCap>${TOTAL_SIZE_CAP}</totalSizeCap>
        </rollingPolicy>
        <encoder>
            <pattern>${FILE_LOG_PATTERN}</pattern>
            <charset>UTF-8</charset>
        </encoder>
    </appender>

    <!-- 性能监控日志 -->
    <appender name="FILE_PERF" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_PATH}/performance.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>${LOG_PATH}/performance.%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            <maxHistory>${MAX_HISTORY}</maxHistory>
            <maxFileSize>${MAX_FILE_SIZE}</maxFileSize>
            <totalSizeCap>${TOTAL_SIZE_CAP}</totalSizeCap>
        </rollingPolicy>
        <encoder>
            <pattern>${FILE_LOG_PATTERN}</pattern>
            <charset>UTF-8</charset>
        </encoder>
    </appender>

    <!-- MQTT日志记录器 -->
    <logger name="org.eclipse.paho" level="INFO" additivity="false">
        <appender-ref ref="FILE_MQTT" />
        <appender-ref ref="CONSOLE" />
    </logger>

    <!-- Spring框架日志 -->
    <logger name="org.springframework" level="INFO" additivity="false">
        <appender-ref ref="FILE_ALL" />
        <appender-ref ref="CONSOLE" />
    </logger>

    <!-- Hibernate/SQL日志 -->
    <logger name="org.hibernate" level="WARN" additivity="false">
        <appender-ref ref="FILE_DB" />
        <appender-ref ref="CONSOLE" />
    </logger>

    <logger name="org.hibernate.SQL" level="DEBUG" additivity="false">
        <appender-ref ref="FILE_DB" />
    </logger>

    <logger name="org.hibernate.type.descriptor.sql" level="TRACE" additivity="false">
        <appender-ref ref="FILE_DB" />
    </logger>

    <!-- 应用特定包日志 -->
    <logger name="com.marathon" level="DEBUG" additivity="false">
        <appender-ref ref="FILE_ALL" />
        <appender-ref ref="CONSOLE" />
    </logger>

    <!-- MQTT消息处理日志 -->
    <logger name="com.marathon.service.MqttMessageHandler" level="DEBUG" additivity="false">
        <appender-ref ref="FILE_MQTT" />
        <appender-ref ref="CONSOLE" />
    </logger>

    <!-- 计时服务日志 -->
    <logger name="com.marathon.service.TimingService" level="INFO" additivity="false">
        <appender-ref ref="FILE_ALL" />
        <appender-ref ref="CONSOLE" />
    </logger>

    <!-- 性能监控日志记录器 -->
    <logger name="com.marathon.monitor" level="INFO" additivity="false">
        <appender-ref ref="FILE_PERF" />
    </logger>

    <!-- 异步日志配置 -->
    <appender name="ASYNC_FILE_ALL" class="ch.qos.logback.classic.AsyncAppender">
        <queueSize>1000</queueSize>
        <discardingThreshold>0</discardingThreshold>
        <includeCallerData>true</includeCallerData>
        <appender-ref ref="FILE_ALL" />
    </appender>

    <appender name="ASYNC_FILE_ERROR" class="ch.qos.logback.classic.AsyncAppender">
        <queueSize>1000</queueSize>
        <discardingThreshold>0</discardingThreshold>
        <includeCallerData>true</includeCallerData>
        <appender-ref ref="FILE_ERROR" />
    </appender>

    <!-- 根据环境设置不同的日志级别 -->
    <if condition='property("ACTIVE_PROFILE").equals("prod")'>
        <then>
            <root level="INFO">
                <appender-ref ref="ASYNC_FILE_ALL" />
                <appender-ref ref="ASYNC_FILE_ERROR" />
                <appender-ref ref="CONSOLE" />
            </root>
        </then>
        <else>
            <root level="DEBUG">
                <appender-ref ref="ASYNC_FILE_ALL" />
                <appender-ref ref="ASYNC_FILE_ERROR" />
                <appender-ref ref="CONSOLE" />
            </root>
        </else>
    </if>

    <!-- Logback内置的异常处理 -->
    <statusListener class="ch.qos.logback.core.status.NopStatusListener" />

</configuration>